{"version":3,"sources":["components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c63a0d99.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Photo Gallery</h1>\n      <h2>Your Pictures</h2>\n      <p>Please add a photo.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDSNt3AUAtGKoiY6wWd6TrLBSFrDHzUGro\",\n  authDomain: \"photo-e54ed.firebaseapp.com\",\n  projectId: \"photo-e54ed\",\n  storageBucket: \"photo-e54ed.appspot.com\",\n  messagingSenderId: \"923639342760\",\n  appId: \"1:923639342760:web:171fb26ed63f497cbe449d\",\n  measurementId: \"G-01TY9E6XWF\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n\n    storageRef.put(file).on('state_changed', (snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n    }, (error) => {\n      setError(error);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({ url, createdAt });\n      setUrl(url);\n    });\n  }, [file]);\n\n  return {progress, url, error};\n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}\n    ></motion.div>\n  );\n} \n\nexport default ProgressBar;","import React, {useState} from 'react';\nimport ProgressBar from './ProgressBar'\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  const handleChange = e => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpg)')\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={handleChange}/>\n        <span>+</span>\n      </label>\n      <div className=\"output\">\n        {error && <div className=\"error\">{error}</div>}\n        {file && <div>{file.name}</div>}\n        { file && <ProgressBar file={file} setFile={setFile} /> }\n      </div>\n    </form>\n  )\n}\n\nexport default UploadForm;","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n  \n  useEffect (() => {\n    const unsub = projectFirestore.collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n          documents.push({...doc.data(), id: doc.id });\n        });\n        setDocs(documents);\n      });\n\n      return () => unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n\n  }, [collection]);\n\n  return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n\n  return(\n    <div className=\"img-grid\">\n      {docs && docs.map(doc =>(\n        <motion.div\n          className=\"img-wrap\"\n          key={doc.id}\n          layout\n          whileHover={{ opacity: 1}}s\n          onClick={() => setSelectedImg(doc.url)}\n        >\n          <motion.img\n            src={doc.url}\n            alt=\"img\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1 }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  )\n\n}\n\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  }\n\n  return (\n    <motion.div\n      className=\"backdrop\"\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img\n        src={ selectedImg }\n        alt=\"enlanged pic\"\n        initial={{ y: \"-100vh\"}}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  )\n\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './components/Title';\nimport UploadForm from './components/UploadForm';\nimport ImageGrid from './components/ImageGrid';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg}/>\n      {selectedImg && (\n        <Modal \n          selectedImg={selectedImg}\n          setSelectedImg={setSelectedImg}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}